#!/bin/bash

timestamp() {
	/usr/bin/date -Isec -u
}

say() {
	echo -e "$(timestamp): ${@}"
}

fail() {
	say "${@}" 1>&2
	exit ${EXIT_CODE:-1}
}

set -euo pipefail

if [ -d "${SOLR_HOME}" ] ; then
	say "Persistence is already initialized, proceeding with the normal boot"
else
	say "Persistence has not been initialized, proceeding with the first-time initialization"

	# First things first - duplicate the Solr home contents into ${SOLR_HOME}
	say "\tInitializing the SOLR_HOME at [${SOLR_HOME}]"
	mkdir -p "${SOLR_HOME}"
	( cd "${HOME_DIR}/server/solr" && tar -cf - . ) | tar -C "${SOLR_HOME}" -xf -
	say "\t...SOLR_HOME is ready"

	if [ -d "${INIT_DIR}" ] ; then
		set -euo pipefail
		cd "${INIT_DIR}" || fail "Failed to CD into [${INIT_DIR}]"
		(
			while read script ; do
				[ -x "${script}" ] || continue
				# Run the script
				say "\tInitializing from script [${script}]..."
				"${script}" || exit 1
			done < <(/usr/bin/find . -mindepth 1 -maxdepth 1 -type f -name '*.sh' | sort)
		) || fail "Initialization failed"
	fi
	say "Initialization complete"
fi

[ -d "${SOLR_LOGS_DIR}" ] || mkdir -p "${SOLR_LOGS_DIR}" || say "WARNING: Failed to find and create the log directory at [${SOLR_LOGS_DIR}]"

[ ${#} -ge 1 ] || set -- start -f -cloud
say "Launching Solr with flags: ${@@Q}"
exec "${HOME_DIR}/bin/solr" "${@}"
